# Task ID: 6
# Title: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –º–µ–Ω—é
# Status: pending
# Dependencies: 5
# Priority: medium
# Description: –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥—É–ª—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML-–¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, –ø–µ—Ä–µ–≤–µ–¥—ë–Ω–Ω—ã–º –º–µ–Ω—é, –≤–∫–ª—é—á–∞—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–ª—é–¥ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ –º–æ–ª–æ–∫–∞ –∏ –≥–ª—é—Ç–µ–Ω–∞.
# Details:
1. –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª html_generator.py –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã:
```python
import os
import base64
from menu_processor import generate_dish_image

async def generate_html(menu_data, output_path):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–º –º–µ–Ω—é
    """
    try:
        # –ù–∞—á–∞–ª–æ HTML-–¥–æ–∫—É–º–µ–Ω—Ç–∞
        html = """
        <!DOCTYPE html>
        <html lang="ru">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–µ –º–µ–Ω—é</title>
            <style>
                body {
                    font-family: 'Arial', sans-serif;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                    background-color: #f9f9f9;
                }
                h1 {
                    text-align: center;
                    color: #333;
                    border-bottom: 2px solid #ddd;
                    padding-bottom: 10px;
                }
                h2 {
                    color: #5a5a5a;
                    margin-top: 30px;
                    border-bottom: 1px solid #eee;
                    padding-bottom: 5px;
                }
                .menu-item {
                    margin-bottom: 20px;
                    padding: 15px;
                    background-color: white;
                    border-radius: 8px;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                    display: flex;
                    flex-direction: row;
                }
                .menu-item-content {
                    flex: 1;
                }
                .menu-item-image {
                    width: 150px;
                    height: 150px;
                    margin-left: 15px;
                    object-fit: cover;
                    border-radius: 5px;
                }
                .menu-item h3 {
                    margin-top: 0;
                    color: #333;
                }
                .menu-item p {
                    margin: 5px 0;
                    color: #666;
                }
                .ingredients {
                    font-style: italic;
                    color: #888;
                }
                .allergens {
                    margin-top: 10px;
                }
                .allergen {
                    display: inline-block;
                    margin-right: 10px;
                    font-size: 0.9em;
                }
                .yes {
                    color: #d9534f;
                }
                .no {
                    color: #5cb85c;
                }
                .unknown {
                    color: #f0ad4e;
                }
            </style>
        </head>
        <body>
            <h1>–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–µ –º–µ–Ω—é</h1>
        """
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        if "categories" in menu_data:
            for category in menu_data["categories"]:
                html += f"<h2>{category['name']}</h2>\n"
                
                for item in category["items"]:
                    html += "<div class='menu-item'>\n"
                    html += "<div class='menu-item-content'>\n"
                    html += f"<h3>{item['name']}</h3>\n"
                    
                    # –ï—Å–ª–∏ —ç—Ç–æ –±–ª—é–¥–æ (–Ω–µ –Ω–∞–ø–∏—Ç–æ–∫), –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
                    if item.get("type") == "–±–ª—é–¥–æ":
                        if "description" in item and item["description"]:
                            html += f"<p>{item['description']}</p>\n"
                        
                        if "ingredients" in item and item["ingredients"]:
                            ingredients_str = ", ".join(item["ingredients"])
                            html += f"<p class='ingredients'><strong>–°–æ—Å—Ç–∞–≤:</strong> {ingredients_str}</p>\n"
                        
                        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–ª–æ–∫–µ –∏ –≥–ª—é—Ç–µ–Ω–µ
                        html += "<div class='allergens'>\n"
                        
                        milk_status = item.get("contains_milk", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                        milk_class = "yes" if milk_status == "–¥–∞" else "no" if milk_status == "–Ω–µ—Ç" else "unknown"
                        html += f"<span class='allergen {milk_class}'>ü•õ –ú–æ–ª–æ–∫–æ: {milk_status}</span>\n"
                        
                        gluten_status = item.get("contains_gluten", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                        gluten_class = "yes" if gluten_status == "–¥–∞" else "no" if gluten_status == "–Ω–µ—Ç" else "unknown"
                        html += f"<span class='allergen {gluten_class}'>üåæ –ì–ª—é—Ç–µ–Ω: {gluten_status}</span>\n"
                        
                        html += "</div>\n"
                    
                    html += "</div>\n"
                    
                    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –±–ª—é–¥–∞ (–Ω–µ –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤)
                    if item.get("type") == "–±–ª—é–¥–æ":
                        try:
                            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                            image_data = await generate_dish_image(item['name'], item.get('description', ''))
                            
                            if image_data:
                                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∫–æ–¥–∏—Ä—É–µ–º –≤ base64
                                mime_type = image_data.mime_type
                                data = base64.b64encode(image_data.data).decode('utf-8')
                                img_src = f"data:{mime_type};base64,{data}"
                                html += f"<img class='menu-item-image' src='{img_src}' alt='{item['name']}'>\n"
                        except Exception as e:
                            print(f"Error generating image for {item['name']}: {str(e)}")
                    
                    html += "</div>\n"
        else:
            # –ï—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π, –≤—ã–≤–æ–¥–∏–º —Å—ã—Ä–æ–π –æ—Ç–≤–µ—Ç
            html += "<p>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ–Ω—é –≤ –æ–∂–∏–¥–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.</p>"
            if "error" in menu_data:
                html += f"<p>–û—à–∏–±–∫–∞: {menu_data['error']}</p>"
            if "raw_response" in menu_data:
                html += f"<pre>{menu_data['raw_response']}</pre>"
        
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ HTML-–¥–æ–∫—É–º–µ–Ω—Ç–∞
        html += """
        </body>
        </html>
        """
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º HTML –≤ —Ñ–∞–π–ª
        with open(output_path, "w", encoding="utf-8") as f:
            f.write(html)
        
        return output_path
    except Exception as e:
        print(f"Error in HTML generation: {str(e)}")
        
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTML —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
        error_html = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>–û—à–∏–±–∫–∞</title>
        </head>
        <body>
            <h1>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML</h1>
            <p>{str(e)}</p>
        </body>
        </html>
        """
        
        with open(output_path, "w", encoding="utf-8") as f:
            f.write(error_html)
        
        return output_path
```

# Test Strategy:
1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –º–µ–Ω—é.
2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–ª—é–¥, –Ω–∞–ø–∏—Ç–∫–æ–≤, –æ–ø–∏—Å–∞–Ω–∏–π –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤.
3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–ª–∏—á–∏–∏ –º–æ–ª–æ–∫–∞ –∏ –≥–ª—é—Ç–µ–Ω–∞.
4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–ª—é–¥.
5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –ø—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
