# Task ID: 7
# Title: Интеграция всех компонентов и тестирование полного цикла работы
# Status: pending
# Dependencies: 2, 3, 4, 5, 6
# Priority: high
# Description: Интеграция всех разработанных модулей и тестирование полного цикла работы бота от получения фотографии до отправки HTML-файла.
# Details:
1. Проверить взаимодействие всех модулей:
   - Получение фотографии через Telegram
   - Распознавание текста с помощью OCR
   - Определение языка и перевод текста
   - Обработка и классификация меню
   - Генерация HTML-страницы
   - Отправка HTML-файла пользователю

2. Добавить логирование для отслеживания процесса обработки:
```python
# В начало каждого файла добавить:
import logging

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler("bot.log"),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)
```

3. Добавить обработку ошибок и повторные попытки для критических операций:
```python
# Пример функции с повторными попытками
async def retry_operation(operation_func, max_retries=3, *args, **kwargs):
    for attempt in range(max_retries):
        try:
            return await operation_func(*args, **kwargs)
        except Exception as e:
            logger.error(f"Attempt {attempt+1}/{max_retries} failed: {str(e)}")
            if attempt == max_retries - 1:
                raise
            await asyncio.sleep(1)  # Пауза перед повторной попыткой
```

4. Проверить обработку различных сценариев использования:
   - Меню на разных языках
   - Меню с разной структурой
   - Некачественные фотографии
   - Фотографии без текста
   - Фотографии с русским текстом

# Test Strategy:
1. Провести end-to-end тестирование полного цикла работы бота.
2. Проверить корректность обработки различных типов меню и языков.
3. Проверить обработку ошибок и граничных случаев.
4. Проверить производительность и время отклика бота.
5. Проверить корректность логирования и отслеживания ошибок.
